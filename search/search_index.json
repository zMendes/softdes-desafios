{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DesSoft Quiz Application Server that hosts challenges for Software Design engineering students. You can create challenges and students can send their answers through application UI and get feedback in real time. In addition, it is possible to choose a deadline for the challenge to be met by the students.","title":"Home"},{"location":"#dessoft-quiz-application","text":"Server that hosts challenges for Software Design engineering students. You can create challenges and students can send their answers through application UI and get feedback in real time. In addition, it is possible to choose a deadline for the challenge to be met by the students.","title":"DesSoft Quiz Application"},{"location":"dev_guide/","text":"Installation First, download the required packages using: pip3 install -r requirements.txt Setting up To run the program, you need to create the database: $ sqlite3 quiz.db < quiz.sql Then, you need to create a CSV file named \"users.csv\" with the users that will be added to the database. Then run: python3 adduser.py Finally, to run the application: sudo python3 softdes.py Code structure The main code is located in \"softes.py\". You can find the available routes with flask annotation and suport functions to handle specific runtime requirements. The student code will be run on the \"lambda_handler\" function. The file \"adduser.py\" inserts in the database the users on the CSV file.","title":"Dev guide"},{"location":"dev_guide/#installation","text":"First, download the required packages using: pip3 install -r requirements.txt","title":"Installation"},{"location":"dev_guide/#setting-up","text":"To run the program, you need to create the database: $ sqlite3 quiz.db < quiz.sql Then, you need to create a CSV file named \"users.csv\" with the users that will be added to the database. Then run: python3 adduser.py Finally, to run the application: sudo python3 softdes.py","title":"Setting up"},{"location":"dev_guide/#code-structure","text":"The main code is located in \"softes.py\". You can find the available routes with flask annotation and suport functions to handle specific runtime requirements. The student code will be run on the \"lambda_handler\" function. The file \"adduser.py\" inserts in the database the users on the CSV file.","title":"Code structure"},{"location":"user_guide/students/","text":"Login First, you need to login using your organization username as both username and password. Then, you will need to change your password by clicking on the top left button. Next, put your current password and your new one in the form and submit. Submitting your code To submit your code, click on the designated quiz and upload your code and send it. It's as simple as that. Your feedback will be displayed beside your entry row. If your code failed, it will appear like this: If it passed all the test, it will show this:","title":"Students"},{"location":"user_guide/students/#login","text":"First, you need to login using your organization username as both username and password. Then, you will need to change your password by clicking on the top left button. Next, put your current password and your new one in the form and submit.","title":"Login"},{"location":"user_guide/students/#submitting-your-code","text":"To submit your code, click on the designated quiz and upload your code and send it. It's as simple as that. Your feedback will be displayed beside your entry row. If your code failed, it will appear like this: If it passed all the test, it will show this:","title":"Submitting your code"},{"location":"user_guide/teachers/","text":"Adding students To add students, first you need to create a CSV file named \"users.csv\" with their names and roles: caio,student Then, you will need to create the database: $ sqlite3 quiz.db < quiz.sql Adding users to the database: $ python3 adduser.py Adding new quizzes To add quizzes, you will have to manually insert the quiz in the database with a SQL script. Example of a SQL query adding a quiz: Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2018-08-01','2022-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\"a\",\"b\",\"c\"]');","title":"Teachers"},{"location":"user_guide/teachers/#adding-students","text":"To add students, first you need to create a CSV file named \"users.csv\" with their names and roles: caio,student Then, you will need to create the database: $ sqlite3 quiz.db < quiz.sql Adding users to the database: $ python3 adduser.py","title":"Adding students"},{"location":"user_guide/teachers/#adding-new-quizzes","text":"To add quizzes, you will have to manually insert the quiz in the database with a SQL script. Example of a SQL query adding a quiz: Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2018-08-01','2022-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\"a\",\"b\",\"c\"]');","title":"Adding new quizzes"}]}